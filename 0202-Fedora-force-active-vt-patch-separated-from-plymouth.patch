From b5d30c312222cda02068e7bc371fcdde9a9562a4 Mon Sep 17 00:00:00 2001
From: Colin Guthrie <colin@mageia.org>
Date: Tue, 30 Aug 2011 20:21:41 +0100
Subject: [PATCH 202/203] Fedora: force-active-vt patch (separated from
 plymouth.patch)

---
 configure.ac                |   17 +++++++++++++++++
 daemon/Makefile.am          |    1 +
 daemon/gdm-display.c        |   30 +++++++++++++++++++++++++++---
 daemon/gdm-simple-slave.c   |   12 ++++++++++--
 daemon/gdm-simple-slave.h   |    3 ++-
 daemon/gdm-slave.c          |   23 +++++++++++++++++++++++
 daemon/gdm-static-display.c |   17 +++++++++++++++++
 daemon/simple-slave-main.c  |    4 +++-
 data/Makefile.am            |    8 ++++++++
 9 files changed, 108 insertions(+), 7 deletions(-)

diff --git a/configure.ac b/configure.ac
index cc9d8db..44a7ee7 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1332,6 +1332,23 @@ GDM_SIMPLE_GREETER_EXTENSIONS_DATA_DIR=${datadir}/gdm/simple-greeter/extensions
 AC_SUBST(GDM_SIMPLE_GREETER_EXTENSIONS_DATA_DIR)
 
 dnl ---------------------------------------------------------------------------
+dnl - Directory to spool events from other processes
+dnl ---------------------------------------------------------------------------
+
+AC_ARG_WITH(spool-dir,
+            AS_HELP_STRING([--with-spool-dir=<dir>],
+                           [spool directory]))
+
+if ! test -z "$with_spool_dir"; then
+   GDM_SPOOL_DIR=$with_spool_dir
+else
+   GDM_SPOOL_DIR=${localstatedir}/spool/gdm
+fi
+
+AC_SUBST(GDM_SPOOL_DIR)
+
+
+dnl ---------------------------------------------------------------------------
 dnl - Finish
 dnl ---------------------------------------------------------------------------
 
diff --git a/daemon/Makefile.am b/daemon/Makefile.am
index ffbaf9b..76ea0b0 100644
--- a/daemon/Makefile.am
+++ b/daemon/Makefile.am
@@ -15,6 +15,7 @@ AM_CPPFLAGS = \
 	-DLOGDIR=\"$(logdir)\"				\
 	-DSBINDIR=\"$(sbindir)\"			\
 	-DGNOMELOCALEDIR=\""$(datadir)/locale"\"	\
+	-DGDM_SPOOL_DIR=\"$(GDM_SPOOL_DIR)\"  \
 	-DGDM_XAUTH_DIR=\"$(GDM_XAUTH_DIR)\"		\
 	-DGDM_SCREENSHOT_DIR=\"$(GDM_SCREENSHOT_DIR)\"		\
 	-DGDM_CACHE_DIR=\""$(localstatedir)/cache/gdm"\"	\
diff --git a/daemon/gdm-display.c b/daemon/gdm-display.c
index 2cdbf65..b9ad600 100644
--- a/daemon/gdm-display.c
+++ b/daemon/gdm-display.c
@@ -65,7 +65,9 @@ struct GdmDisplayPrivate
         gsize                 x11_cookie_size;
         GdmDisplayAccessFile *access_file;
 
-        gboolean              is_local;
+        guint                 is_local : 1;
+        guint                 force_active_vt : 1;
+
         guint                 finish_idle_id;
 
         GdmSlaveProxy        *slave_proxy;
@@ -84,6 +86,7 @@ enum {
         PROP_X11_COOKIE,
         PROP_X11_AUTHORITY_FILE,
         PROP_IS_LOCAL,
+        PROP_FORCE_ACTIVE_VT,
         PROP_SLAVE_COMMAND,
 };
 
@@ -584,9 +587,10 @@ gdm_display_real_prepare (GdmDisplay *display)
         gdm_slave_proxy_set_log_path (display->priv->slave_proxy, log_path);
         g_free (log_path);
 
-        command = g_strdup_printf ("%s --display-id %s",
+        command = g_strdup_printf ("%s --display-id %s %s",
                                    display->priv->slave_command,
-                                   display->priv->id);
+                                   display->priv->id,
+                                   display->priv->force_active_vt? "--force-active-vt" : "");
         gdm_slave_proxy_set_command (display->priv->slave_proxy, command);
         g_free (command);
 
@@ -834,6 +838,13 @@ _gdm_display_set_is_local (GdmDisplay     *display,
 }
 
 static void
+_gdm_display_set_force_active_vt (GdmDisplay     *display,
+                                  gboolean        force_active_vt)
+{
+        display->priv->force_active_vt = force_active_vt;
+}
+
+static void
 _gdm_display_set_slave_command (GdmDisplay     *display,
                                 const char     *command)
 {
@@ -876,6 +887,9 @@ gdm_display_set_property (GObject        *object,
         case PROP_IS_LOCAL:
                 _gdm_display_set_is_local (self, g_value_get_boolean (value));
                 break;
+        case PROP_FORCE_ACTIVE_VT:
+                _gdm_display_set_force_active_vt (self, g_value_get_boolean (value));
+                break;
         case PROP_SLAVE_COMMAND:
                 _gdm_display_set_slave_command (self, g_value_get_string (value));
                 break;
@@ -924,6 +938,9 @@ gdm_display_get_property (GObject        *object,
         case PROP_IS_LOCAL:
                 g_value_set_boolean (value, self->priv->is_local);
                 break;
+        case PROP_FORCE_ACTIVE_VT:
+                g_value_set_boolean (value, self->priv->force_active_vt);
+                break;
         case PROP_SLAVE_COMMAND:
                 g_value_set_string (value, self->priv->slave_command);
                 break;
@@ -1094,6 +1111,13 @@ gdm_display_class_init (GdmDisplayClass *klass)
                                                                NULL,
                                                                TRUE,
                                                                G_PARAM_READWRITE | G_PARAM_CONSTRUCT));
+        g_object_class_install_property (object_class,
+                                         PROP_FORCE_ACTIVE_VT,
+                                         g_param_spec_boolean ("force-active-vt",
+                                                               NULL,
+                                                               NULL,
+                                                               FALSE,
+                                                               G_PARAM_READWRITE | G_PARAM_CONSTRUCT));
 
         g_object_class_install_property (object_class,
                                          PROP_SLAVE_COMMAND,
diff --git a/daemon/gdm-simple-slave.c b/daemon/gdm-simple-slave.c
index fe25bcf..550aa97 100644
--- a/daemon/gdm-simple-slave.c
+++ b/daemon/gdm-simple-slave.c
@@ -98,6 +98,7 @@ struct GdmSimpleSlavePrivate
 
 enum {
         PROP_0,
+        FORCE_ACTIVE_VT
 };
 
 static void     gdm_simple_slave_class_init     (GdmSimpleSlaveClass *klass);
@@ -1527,12 +1528,14 @@ gdm_simple_slave_run (GdmSimpleSlave *slave)
         char    *auth_file;
         char    *seat_id;
         gboolean display_is_local;
+        gboolean force_active_vt;
 
         g_object_get (slave,
                       "display-is-local", &display_is_local,
                       "display-name", &display_name,
                       "display-seat-id", &seat_id,
                       "display-x11-authority-file", &auth_file,
+                      "force-active-vt", &force_active_vt,
                       NULL);
 
         /* if this is local display start a server if one doesn't
@@ -1570,7 +1573,10 @@ gdm_simple_slave_run (GdmSimpleSlave *slave)
                         plymouth_prepare_for_transition (slave);
                         res = gdm_server_start_on_active_vt (slave->priv->server);
                 } else {
-                        res = gdm_server_start (slave->priv->server);
+                        if (force_active_vt)
+                                res = gdm_server_start_on_active_vt (slave->priv->server);
+                        else
+                                res = gdm_server_start (slave->priv->server);
                 }
                 if (! res) {
                         g_warning (_("Could not start the X "
@@ -1740,12 +1746,14 @@ gdm_simple_slave_finalize (GObject *object)
 }
 
 GdmSlave *
-gdm_simple_slave_new (const char *id)
+gdm_simple_slave_new (const char *id,
+                      gboolean    force_active_vt)
 {
         GObject *object;
 
         object = g_object_new (GDM_TYPE_SIMPLE_SLAVE,
                                "display-id", id,
+                               "force-active-vt", force_active_vt,
                                NULL);
 
         return GDM_SLAVE (object);
diff --git a/daemon/gdm-simple-slave.h b/daemon/gdm-simple-slave.h
index 1f1aa1d..e9aa624 100644
--- a/daemon/gdm-simple-slave.h
+++ b/daemon/gdm-simple-slave.h
@@ -48,7 +48,8 @@ typedef struct
 } GdmSimpleSlaveClass;
 
 GType               gdm_simple_slave_get_type   (void);
-GdmSlave *          gdm_simple_slave_new        (const char       *id);
+GdmSlave *          gdm_simple_slave_new        (const char       *id,
+                                                 gboolean          force_active_vt);
 
 G_END_DECLS
 
diff --git a/daemon/gdm-slave.c b/daemon/gdm-slave.c
index c04abda..f5180de 100644
--- a/daemon/gdm-slave.c
+++ b/daemon/gdm-slave.c
@@ -96,6 +96,7 @@ struct GdmSlavePrivate
         char            *display_hostname;
         gboolean         display_is_local;
         gboolean         display_is_parented;
+        gboolean         force_active_vt;
         char            *display_seat_id;
         char            *display_x11_authority_file;
         char            *parent_display_name;
@@ -115,6 +116,7 @@ enum {
         PROP_DISPLAY_NUMBER,
         PROP_DISPLAY_HOSTNAME,
         PROP_DISPLAY_IS_LOCAL,
+        PROP_FORCE_ACTIVE_VT,
         PROP_DISPLAY_SEAT_ID,
         PROP_DISPLAY_X11_AUTHORITY_FILE
 };
@@ -1896,6 +1898,13 @@ _gdm_slave_set_display_is_local (GdmSlave   *slave,
 }
 
 static void
+_gdm_slave_set_force_active_vt (GdmSlave   *slave,
+                                gboolean    force_active_vt)
+{
+        slave->priv->force_active_vt = force_active_vt;
+}
+
+static void
 gdm_slave_set_property (GObject      *object,
                         guint         prop_id,
                         const GValue *value,
@@ -1927,6 +1936,9 @@ gdm_slave_set_property (GObject      *object,
         case PROP_DISPLAY_IS_LOCAL:
                 _gdm_slave_set_display_is_local (self, g_value_get_boolean (value));
                 break;
+        case PROP_FORCE_ACTIVE_VT:
+                _gdm_slave_set_force_active_vt (self, g_value_get_boolean (value));
+                break;
         default:
                 G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
                 break;
@@ -1965,6 +1977,9 @@ gdm_slave_get_property (GObject    *object,
         case PROP_DISPLAY_IS_LOCAL:
                 g_value_set_boolean (value, self->priv->display_is_local);
                 break;
+        case PROP_FORCE_ACTIVE_VT:
+                g_value_set_boolean (value, self->priv->force_active_vt);
+                break;
         default:
                 G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
                 break;
@@ -2090,6 +2105,14 @@ gdm_slave_class_init (GdmSlaveClass *klass)
                                                                TRUE,
                                                                G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY));
 
+        g_object_class_install_property (object_class,
+                                         PROP_FORCE_ACTIVE_VT,
+                                         g_param_spec_boolean ("force-active-vt",
+                                                               "Force Active VT",
+                                                               "Force display to active VT",
+                                                               TRUE,
+                                                               G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY));
+
         signals [STOPPED] =
                 g_signal_new ("stopped",
                               G_TYPE_FROM_CLASS (object_class),
diff --git a/daemon/gdm-static-display.c b/daemon/gdm-static-display.c
index 16953f9..397f07e 100644
--- a/daemon/gdm-static-display.c
+++ b/daemon/gdm-static-display.c
@@ -81,10 +81,27 @@ gdm_static_display_remove_user_authorization (GdmDisplay *display,
 }
 
 static gboolean
+triggered_to_force_display_on_active_vt (void)
+{
+        gboolean should_force_display_on_active_vt;
+
+        should_force_display_on_active_vt = g_file_test (GDM_SPOOL_DIR "/force-display-on-active-vt",
+                                                         G_FILE_TEST_EXISTS);
+        g_unlink (GDM_SPOOL_DIR "/force-display-on-active-vt");
+
+        return should_force_display_on_active_vt;
+}
+
+static gboolean
 gdm_static_display_manage (GdmDisplay *display)
 {
         g_return_val_if_fail (GDM_IS_DISPLAY (display), FALSE);
 
+        if (triggered_to_force_display_on_active_vt ()) {
+                g_object_set (display, "force-active-vt", TRUE, NULL);
+        } else {
+                g_object_set (display, "force-active-vt", FALSE, NULL);
+        }
         GDM_DISPLAY_CLASS (gdm_static_display_parent_class)->manage (display);
 
         return TRUE;
diff --git a/daemon/simple-slave-main.c b/daemon/simple-slave-main.c
index 057492b..afa60a4 100644
--- a/daemon/simple-slave-main.c
+++ b/daemon/simple-slave-main.c
@@ -177,9 +177,11 @@ main (int    argc,
         DBusGConnection  *connection;
         GdmSlave         *slave;
         static char      *display_id = NULL;
+        static gboolean   force_active_vt = FALSE;
         GdmSignalHandler *signal_handler;
         static GOptionEntry entries []   = {
                 { "display-id", 0, 0, G_OPTION_ARG_STRING, &display_id, N_("Display ID"), N_("ID") },
+                { "force-active-vt", 0, 0, G_OPTION_ARG_NONE, &force_active_vt, N_("Force X to start on active vt"), NULL },
                 { NULL }
         };
 
@@ -246,7 +248,7 @@ main (int    argc,
         gdm_signal_handler_add (signal_handler, SIGUSR1, signal_cb, NULL);
         gdm_signal_handler_add (signal_handler, SIGUSR2, signal_cb, NULL);
 
-        slave = gdm_simple_slave_new (display_id);
+        slave = gdm_simple_slave_new (display_id, force_active_vt);
         if (slave == NULL) {
                 goto out;
         }
diff --git a/data/Makefile.am b/data/Makefile.am
index f0d00bf..eaf2421 100644
--- a/data/Makefile.am
+++ b/data/Makefile.am
@@ -12,6 +12,7 @@ predir = $(gdmconfdir)/PreSession
 postlogindir = $(gdmconfdir)/PostLogin
 workingdir = $(GDM_WORKING_DIR)
 xauthdir = $(GDM_XAUTH_DIR)
+spooldir = $(GDM_SPOOL_DIR)
 screenshotdir = $(GDM_SCREENSHOT_DIR)
 cachedir = $(localstatedir)/cache/gdm
 
@@ -163,6 +164,7 @@ uninstall-hook:
 	$(DESTDIR)$(workingdir)/.config/dconf \
 	$(DESTDIR)$(screenshotdir) \
 	$(DESTDIR)$(xauthdir)
+	$(DESTDIR)$(spooldir)
 
 	-rmdir \
 	$(DESTDIR)$(sysconfdir)/dconf/db/gdm.d/locks \
@@ -307,6 +309,12 @@ install-data-hook: gdm.conf-custom Xsession Init PostSession PreSession 00-upstr
 		chown root:gdm $(DESTDIR)$(cachedir) || : ; \
 	fi
 
+	if test '!' -d $(DESTDIR)$(spooldir); then \
+		$(mkinstalldirs) $(DESTDIR)$(spooldir); \
+		chmod 775 $(DESTDIR)$(spooldir); \
+		chown root:gdm $(DESTDIR)$(spooldir) || : ; \
+	fi
+
 	$(INSTALL_DATA) $(srcdir)/dconf-profile $(DESTDIR)$(sysconfdir)/dconf/profile/gdm
 	$(INSTALL_DATA) $(srcdir)/00-upstream-settings $(DESTDIR)$(sysconfdir)/dconf/db/gdm.d
 	$(INSTALL_DATA) $(srcdir)/00-upstream-settings-locks $(DESTDIR)$(sysconfdir)/dconf/db/gdm.d/locks
-- 
1.7.9.3

